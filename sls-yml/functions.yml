hello-world:
  handler: src/handlers/hello/hello.handler
  description: 'offline example'
  events:
    - httpApi:
        path: /${self:provider.stage}/hello
        method: GET
getUsers:
  handler: src/handlers/users/queryUsers.handler
  description: 'Get active users'
  events:
    - httpApi:
        path: /${self:provider.stage}/users
        method: GET
        authorizer: ${file(./yml/authorizer.yml)}
  environment:
    TABLE_NAME_USERS: ${env:TABLE_NAME_USERS}
getLoginUser:
  handler: src/handlers/users/queryUser.handler
  description: 'Get loged in user'
  events:
    - httpApi:
        path: /${self:provider.stage}/currentUser/{userId}
        method: GET
        authorizer: ${file(./yml/authorizer.yml)}
  environment:
    TABLE_NAME_USERS: ${env:TABLE_NAME_USERS}
createUser:
  handler: src/handlers/users/createUser.handler
  events:
    - httpApi:
        path: /${self:provider.stage}/users
        method: POST
  environment:
    TABLE_NAME_USERS: ${env:TABLE_NAME_USERS}
    TABLE_NAME_AUTH: ${env:TABLE_NAME_AUTH}
getCarouselSlides:
  handler: src/handlers/carouselSlides/queryCarouselSlides.handler
  description: 'Get carousel slides'
  events:
    - httpApi:
        path: /${self:provider.stage}/carouselSlides
        method: GET
  environment:
    TABLE_NAME_SLIDES: ${env:TABLE_NAME_SLIDES}
createCarouselSlides:
  handler: src/handlers/carouselSlides/createCarouselSlides.handler
  events:
    - httpApi:
        path: /${self:provider.stage}/carouselSlides
        method: POST
  environment:
    TABLE_NAME_SLIDES: ${env:TABLE_NAME_SLIDES}
getQuestions:
  handler: src/handlers/questions/queryQuestions.handler
  description: 'Get texts'
  events:
    - httpApi:
        path: /${self:provider.stage}/questions
        method: GET
  environment:
    TABLE_NAME_QUESTIONS: ${env:TABLE_NAME_QUESTIONS}
createTexts:
  handler: src/handlers/questions/createQuestion.handler
  events:
    - httpApi:
        path: /${self:provider.stage}/questions
        method: POST
  environment:
    TABLE_NAME_QUESTIONS: ${env:TABLE_NAME_QUESTIONS}
login:
  handler: src/handlers/auth/auth.login
  events:
    - httpApi:
        path: /${self:provider.stage}/login
        method: POST
  environment:
    TABLE_NAME_AUTH: ${env:TABLE_NAME_AUTH}
logout:
  handler: src/handlers/auth/auth.logout
  events:
    - httpApi:
        path: /${self:provider.stage}/logout
        method: POST
isAuthorized:
  handler: src/handlers/auth/auth.isAuthorized
  events:
    - httpApi:
        path: /${self:provider.stage}/auth
        method: GET
verifyToken:
  handler: src/handlers/auth/auth.verifyToken
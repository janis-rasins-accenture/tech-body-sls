hello-world:
  handler: src/handlers/hello/hello.handler
  description: 'offline example'
  events:
    - httpApi:
        path: /${self:provider.stage}/hello
        method: GET
        authorizer:
          name: verifyToken
getUsers:
  handler: src/handlers/users/queryUsers.handler
  description: 'Get active users'
  events:
    - httpApi:
        path: /${self:provider.stage}/users
        method: GET
        authorizer:
          name: verifyToken
  environment:
    TABLE_NAME_USERS: ${env:TABLE_NAME_USERS}
getUserByName:
  handler: src/handlers/users/getUserByName.handler
  description: 'Get user by user name'
  events:
    - httpApi:
        path: /${self:provider.stage}/user/{userName}
        method: GET
        authorizer:
          name: verifyToken
  environment:
    TABLE_NAME_USERS: ${env:TABLE_NAME_USERS}
getLoginUser:
  handler: src/handlers/users/queryUser.handler
  description: 'Get loged in user'
  events:
    - httpApi:
        path: /${self:provider.stage}/currentUser/{userId}
        method: GET
        authorizer:
          name: verifyToken
  environment:
    TABLE_NAME_USERS: ${env:TABLE_NAME_USERS}
createUser:
  handler: src/handlers/users/createUser.handler
  events:
    - httpApi:
        path: /${self:provider.stage}/users
        method: POST
  environment:
    TABLE_NAME_USERS: ${env:TABLE_NAME_USERS}
    TABLE_NAME_AUTH: ${env:TABLE_NAME_AUTH}
getCarouselSlides:
  handler: src/handlers/carouselSlides/queryCarouselSlides.handler
  description: 'Get carousel slides'
  events:
    - httpApi:
        path: /${self:provider.stage}/carouselSlides
        method: GET
  environment:
    TABLE_NAME_SLIDES: ${env:TABLE_NAME_SLIDES}
createCarouselSlides:
  handler: src/handlers/carouselSlides/createCarouselSlides.handler
  events:
    - httpApi:
        path: /${self:provider.stage}/carouselSlides
        method: POST
        authorizer:
          name: verifyToken
  environment:
    TABLE_NAME_SLIDES: ${env:TABLE_NAME_SLIDES}
getQuestions:
  handler: src/handlers/questions/queryQuestions.handler
  description: 'Get texts'
  events:
    - httpApi:
        path: /${self:provider.stage}/questions
        method: GET
  environment:
    TABLE_NAME_QUESTIONS: ${env:TABLE_NAME_QUESTIONS}
createTexts:
  handler: src/handlers/questions/createQuestion.handler
  events:
    - httpApi:
        path: /${self:provider.stage}/questions
        method: POST
        authorizer:
          name: verifyToken
  environment:
    TABLE_NAME_QUESTIONS: ${env:TABLE_NAME_QUESTIONS}
login:
  handler: src/handlers/auth/login.handler
  events:
    - httpApi:
        path: /${self:provider.stage}/login
        method: POST
  environment:
    TABLE_NAME_AUTH: ${env:TABLE_NAME_AUTH}
    TABLE_NAME_USERS: ${env:TABLE_NAME_USERS}
logout:
  handler: src/handlers/auth/logout.handler
  events:
    - httpApi:
        path: /${self:provider.stage}/logout
        method: POST
        authorizer:
          name: verifyToken
isAuthorized:
  handler: src/handlers/auth/isAuthorized.handler
  events:
    - httpApi:
        path: /${self:provider.stage}/auth
        method: GET
  environment:
    TABLE_NAME_USERS: ${env:TABLE_NAME_USERS}
verifyToken:
  handler: src/handlers/auth/verifyToken.handler
getPosts:
  handler: src/handlers/posts/queryPosts.handler
  description: 'Get active posts'
  events:
    - httpApi:
        path: /${self:provider.stage}/posts
        method: GET
        authorizer:
          name: verifyToken
  environment:
    TABLE_NAME_POSTS: ${env:TABLE_NAME_POSTS}
getPostsByUser:
  handler: src/handlers/posts/queryPostsByUser.handler
  description: 'Get active posts by one user'
  events:
    - httpApi:
        path: /${self:provider.stage}/posts/{userId}
        method: GET
        authorizer:
          name: verifyToken
  environment:
    TABLE_NAME_POSTS: ${env:TABLE_NAME_POSTS}
updatePost:
  handler: src/handlers/posts/updatePost.handler
  description: 'Update post'
  events:
    - httpApi:
        path: /${self:provider.stage}/posts/{postId}
        method: PUT
        authorizer:
          name: verifyToken
  environment:
    TABLE_NAME_POSTS: ${env:TABLE_NAME_POSTS}